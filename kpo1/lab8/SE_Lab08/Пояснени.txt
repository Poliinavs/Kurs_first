Регистр EIP – указатель на инструкцию,(Адрес след инструкц для процессора)
которая должна быть выполнена
процессором Обновл в случ: Процессор закончил выполнение инструкции, Выполнена инструкция ret – возврат, Выполнена инструкция call – вызов.
 Регистр ESP-адрес вершины стека
cdecl: помещаем в стек с права на лево,push: первый параметр будет 1 и будет выделено 4 байта в стеке
call:вызывает функцию, после вызова попадаем в тело функции, передеали в функци 3 параметра (в вершину стека передаются адрес возварарта(адрес след инструкц)) 
mov: т.к LIFO(последн пришел первым вышел), в вершине будет 3, она будет первая сниматься, 4 байта будут перемещены в регистр EAX(он будет их хранить )
add: сложение, выполняется складыв значен регистра EAX и значен 4 байта след занчения
ret: возращ поток управлен в основную функцию, вызыв код(в стеке лежат параметры, а в вершине стека адресс точки возврата), был записан при call вызове функции
в cdecl чистить стек обязан вызыв код, для выталкиван значен add: прибавл 12 байт к адресу
mov:перемещен значен после выполн функци в переменную 

stdcall: параметры справа налево, значен возвращают чрезе EAX, за очистку стека отвечает вызываем код
Отлич от cdecl: в ret есть значен 12 тк сама вызыв функция чистит стек(восстанавливаем)

fastcall: передача параметров в 2 регистра (2 параметра перед через регистры, 2 через стек)   Прередача справа на лево, перв 2 в стек, за очистку вызываем код
	mov: перемещ значен в регистр edx или ecx;
call: в вершине стека адрес точки возрварта(адрес след инструкции); в функцию перед параметрыж
перв параметр edx; mov: перемещ 4 байта (dword) из регистра edx по указателю (ptr) перемен y;
eax: как накопитель суммы
ret: снимает адрес вершины стека, помещает в регистр, указыв на след инструкц, увеличен адреса на 8 байт